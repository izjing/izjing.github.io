import{_ as n,p as a,q as s,a1 as t}from"./framework-5866ffd3.js";const e={},o=t(`<h1 id="js手写实现" tabindex="-1"><a class="header-anchor" href="#js手写实现" aria-hidden="true">#</a> js手写实现</h1><h2 id="模拟new实现" tabindex="-1"><a class="header-anchor" href="#模拟new实现" aria-hidden="true">#</a> 模拟new实现</h2><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h3><ol><li>new一个构造函数会返回一个实例对象</li><li>如果构造函数的返回结果是一个引用类型就返回该引用类型</li></ol><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mockNew</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> Constructor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Constructor</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">Constructor</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> r <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> r <span class="token operator">:</span> obj<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p=[o];function c(i,l){return a(),s("div",null,p)}const u=n(e,[["render",c],["__file","index.html.vue"]]);export{u as default};
